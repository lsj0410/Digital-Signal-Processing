# -*- coding: utf-8 -*-

Automatically generated by Colaboratory.

# import necessary functions
import numpy as np
import matplotlib.pyplot as plt
import cv2
from google.colab.patches import cv2_imshow

# Figure 1
x = range(256)
y0 = np.zeros(256)
y1 = np.zeros(256)
y2 = np.zeros(256)
y3 = np.zeros(256)
y4 = np.zeros(256)
for i in range(256):
  y0[i] = x[i]
  y1[i] = 255 - x[i]
  y2[i] = ((x[i] / 255.0) ** 8) * 255.0
  y3[i] = ((x[i] / 255.0) ** 0.125) * 255.0
  if i in range(100):
    y4[i] = x[i] * 0.5
  elif i in range(100, 156):
    y4[i] = x[i] * (156/56.0) - (15600 / 56.0 - 50)
  else:
    y4[i] = x[i] * 0.5 + 128

fig = plt.figure()
ax = fig.add_subplot()
plt.plot(x, y0, label = "identity")
plt.plot(x, y1, label = "negative")
plt.plot(x, y2, label = "power > 1")
plt.plot(x, y3, label = "power < 1")
plt.plot(x, y4, label = "dynamic expansion")
plt.legend()
ax.set_aspect('equal', adjustable='box')
plt.show()

# Figure 2
img = cv2.imread("3-2-1_dog.png", 0) # Read image in grayscale
(x, y) = img.shape
cv2_imshow(img)

img0 = img.copy() # Identity
img1 = img.copy() # Negative
img2 = img.copy() # Power > 1
img3 = img.copy() # Power < 1
img4 = img.copy() # Dynamic range expansion
print(img.shape)
for i in range(x):
  for j in range(y):
    img0[i, j] = img[i, j]
    img1[i, j] = 255 - img[i, j]
    img2[i, j] = ((img[i, j] / 255.0) ** 8) * 255.0
    img3[i, j] = ((img[i, j] / 255.0) ** 0.125) * 255.0
    z = img[i, j]
    if z in range(100):
      img4[i, j] = z * 0.5
    elif z in range(100, 156):
      img4[i, j] = z * (156/56.0) - (15600 / 56.0 - 50)
    else:
      img4[i, j] = z * 0.5 + 128
cv2_imshow(img0)
cv2_imshow(img1)
cv2_imshow(img2)
cv2_imshow(img3)
cv2_imshow(img4)

# Figure 3
img_bin = np.zeros((x, y, 8)) # img_bin[:, :, k] corresponds to Figure 3-(k+1)
for i in range(x):
  for j in range(y):
    temp = img[i, j]
    for k in range(8):
      img_bin[i, j, k] = temp % 2
      temp = temp / 2

for k in range(8):
  cv2_imshow(img_bin[:, :, k] * 255)

img_bin_78 = 128 * img_bin[:, :, 7] + 64 * img_bin[:, :, 6]
img_bin_678 = img_bin_78 + 32 * img_bin[:, :, 5]
cv2_imshow(img_bin_78)
cv2_imshow(img_bin_678)
